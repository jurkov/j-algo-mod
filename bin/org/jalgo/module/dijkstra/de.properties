Module_name=Dijkstra
Module_version=1.1
Module_authors=Alexander Claus, Frank Staudinger, Julian Stecklina, Hannes Straß, Steven Voigt, Martin Winter
Module_description_1=Dieses Modul behandelt Dijkstra's Algorithmus zum Finden kürzester Wege in Graphen.
Module_description_2=Es können Graphen modelliert werden, der Algorithmus wird intuitiv visualisiert.
Module_license=GNU General Public License

Undo=Rückgängig
Undo_tooltip=Macht die letzte Änderung rückgängig.
Redo=Wiederherstellen
Redo_tooltip=Stellt die letzte Änderung wieder her.

EditModeToolPanel.Tools=Werkzeuge
EditModeToolPanel.Add_move_node=Knoten erstellen/verschieben
EditModeToolPanel.Add_move_node_tooltip=Erstellen und verschieben Sie Knoten auf der Zeichenfläche
EditModeToolPanel.Add_eval_edge=Kante hinzufügen/bewerten
EditModeToolPanel.Add_eval_edge_tooltip=Erstellen und bewerten Sie Kanten intuitiv.
EditModeToolPanel.Remove_node=Knoten löschen
EditModeToolPanel.Remove_node_tooltip=Löschen Sie ausgewählte Knoten durch Klick.
EditModeToolPanel.Remove_edge=Kante löschen
EditModeToolPanel.Remove_edge_tooltip=Löschen Sie ausgewählte Kanten durch Klick.

AlgorithmModeToolPanel.Tools=Werkzeuge
AlgorithmModeToolPanel.Start_node=Startknoten:
AlgorithmModeToolPanel.Algorithm_step=Algorithmusschritt:
AlgorithmModeToolPanel.Start_animation=Animation starten
AlgorithmModeToolPanel.Of=von 
AlgorithmModeToolPanel.Go_to=Gehe zu

GraphPanel.Graph=Graph
GraphPanel.Arrange_nodes_automatically=Knoten automatisch anordnen
GraphPanel.Arrange_tooltip=Alle Knoten automatisch in einem regelmäßigen Vieleck anordnen.

NodeListPanel.Node_list=Knotenliste

EdgeListPanel.Edge_list=Kantenliste
EdgeListPanel.Apply=Anwenden

MatrixPanel.Distance_matrix=Distanzmatrix
MatrixPanel.Tooltip=Eingabe von Kantengewichten. Kante löschen durch Eingabe von Minus (-).

AlgorithmModeCalculationTablePanel.Calc_table=Rechentableau

AlgorithmModeResultTablePanel.Result=Ergebnis

StatusbarComposite.Start_algorithm=Algorithmus starten
StatusbarComposite.Start_algorithm_tooltip=Wechselt die Ansicht und startet den Algorithmus
StatusbarComposite.Edit_graph=Graph bearbeiten
StatusbarComposite.Edit_graph_tooltip=Wechselt die Ansicht zum Bearbeiten des Graphen
StatusbarComposite.Restart_algorithm=Algorithmus neu starten

EdgeListParser.Syntax_error_1=Kantenliste: Syntaxfehler im Eingabestring: 
EdgeListParser.Syntax_error_2=Syntaxfehler in der Kantenliste: (
EdgeListParser.Syntax_error_3=). Erwartet: (Startknoten, Gewicht, Endknoten).
EdgeListParser.Syntax_hint_1=Kantenliste muss mit "{" beginnen\!
EdgeListParser.Syntax_hint_2=Kantenliste muss auf "}" enden\!
EdgeListParser.Syntax_hint_3=Kante muss mit "(" beginnen\!
EdgeListParser.Syntax_hint_4=Kante muss auf "(" enden\!
EdgeListParser.Syntax_hint_5=Kanten m\u00FCssen mit "," getrennt werden\!
EdgeListParser.Syntax_hint_6=Einzelne Elemente innerhalb der Kante m\u00FCssen mit "," getrennt werden\!
EdgeListParser.Syntax_error_4=Unerwartetes Ende des Eingabestrings\! Erwartet: Startknoten.
EdgeListParser.Syntax_error_5=Unerwartetes Ende des Eingabestrings\! Erwartet: Endknoten.
NodeListParser.Syntax_error_1=Knotenliste: Syntaxfehler im Eingabestring: "
NodeListParser.Syntax_hint_1=Knotenliste muss mit "{" beginnen\!
NodeListParser.Syntax_hint_2=Knotenliste muss auf "}" enden\!
NodeListParser.Syntax_error_2=Unerwartetes Ende des Eingabestrings\! Erwartet: Knoten.
NodeListParser.Syntax_error_3=Kein zul\u00E4ssiger Knoten: 
NodeListParser.Syntax_hint_3=\! Nur Dezimalzahlen von 1 - 9 erlaubt.
NodeListParser.Syntax_hint_4=Knoten m\u00FCssen mit "," getrennt werden\!
DijkstraAlgorithm.Node=Knoten 
DijkstraAlgorithm.Is_over=\ ist \u00FCber 
DijkstraAlgorithm.Reachable_on_shorter_path=\ auf einem k\u00FCrzeren Wege erreichbar.
DijkstraAlgorithm.Reachable_over_existing_path_shorter=\ ist \u00FCber den bestehenden Weg k\u00FCrzer zu erreichen.
DijkstraAlgorithm.New_node=Neuer Knoten im Rand: 
DijkstraAlgorithm.Error_1=Predecessor of border node is null
DijkstraAlgorithm.Error_2=Node equals predecessor
DijkstraAlgorithm.Choosed_as_start_node=\ als Startknoten gew\u00E4hlt.
DijkstraAlgorithm.Fringe_complete_for_start_node=Randknotenmenge f\u00FCr Startknoten komplett.
DijkstraAlgorithm.New_choosen=Neuer gew\u00E4hlter 
DijkstraAlgorithm.Fringe_complete=Randknotenmenge komplett
DijkstraAlgorithm.Algorithm_finished=Algorithmus beendet
AlgorithmCalculationTableComposite.Chosen=Gew\u00E4hlt
AlgorithmResultTableComposite.Target_node=Zielknoten
AlgorithmResultTableComposite.Path_length=Wegl\u00E4nge
AlgorithmResultTableComposite.Shortest_path=k\u00FCrzester Weg
AlgorithmCalculationTableComposite.Fringe_node=Randknoten
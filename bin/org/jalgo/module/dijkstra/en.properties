Module_name=Dijkstra
Module_version=1.1
Module_authors=Alexander Claus, Frank Staudinger, Julian Stecklina, Hannes Straﬂ, Steven Voigt, Martin Winter
Module_description_1=This module is about Dijkstra's algorithm for finding the shortest path in graphs.
Module_description_2=Graphs can be created, the algorithm will be visualized intuitively.
Module_license=GNU General Public License

Undo=Undo
Undo_tooltip=Undoes the last change.
Redo=Redo
Redo_tooltip=Redoes the last change.

EditModeToolPanel.Tools=Tools
EditModeToolPanel.Add_move_node=Add/Move node
EditModeToolPanel.Add_move_node_tooltip=Create and move nodes on canvas.
EditModeToolPanel.Add_eval_edge=Add/Evaluate edge
EditModeToolPanel.Add_eval_edge_tooltip=Create and evaluate edges intuitively.
EditModeToolPanel.Remove_node=Remove node
EditModeToolPanel.Remove_node_tooltip=Remove nodes per click.
EditModeToolPanel.Remove_edge=Remove edge
EditModeToolPanel.Remove_edge_tooltip=Remove edges per click.

AlgorithmModeToolPanel.Tools=Tools
AlgorithmModeToolPanel.Start_node=Start node:
AlgorithmModeToolPanel.Algorithm_step=Algorithm step:
AlgorithmModeToolPanel.Start_animation=Start animation
AlgorithmModeToolPanel.Of=of 
AlgorithmModeToolPanel.Go_to=Go to

GraphPanel.Graph=Graph
GraphPanel.Arrange_nodes_automatically=Arrange nodes automatically
GraphPanel.Arrange_tooltip=Arranges all nodes in a regular polygon.

NodeListPanel.Node_list=Nodelist

EdgeListPanel.Edge_list=Edgelist
EdgeListPanel.Apply=Apply

MatrixPanel.Distance_matrix=Distance matrix
MatrixPanel.Tooltip=Insert edge weights. Type '-' for removing edge.

AlgorithmModeCalculationTablePanel.Calc_table=Calculation table

AlgorithmModeResultTablePanel.Result=Result

StatusbarComposite.Start_algorithm=Start algorithm
StatusbarComposite.Start_algorithm_tooltip=Switches the layout and starts the algorithm
StatusbarComposite.Edit_graph=Edit graph
StatusbarComposite.Edit_graph_tooltip=Switches the layout for editing the graph
StatusbarComposite.Restart_algorithm=Restart algorithm

EdgeListParser.Syntax_error_1=Edgelist: syntax error in input string: 
EdgeListParser.Syntax_error_2=syntax error in edgelist: (
EdgeListParser.Syntax_error_3=). Expected: (start node, weight, end node).
EdgeListParser.Syntax_hint_1=Edgelist has to start with "{"\!
EdgeListParser.Syntax_hint_2=Edgelist has to end with "}"\!
EdgeListParser.Syntax_hint_3=Edge has to start with "("\!
EdgeListParser.Syntax_hint_4=Edge has to end with ")"\!
EdgeListParser.Syntax_hint_5=Separate edges with ","\!
EdgeListParser.Syntax_hint_6=Separate edge elements with ","\!
EdgeListParser.Syntax_error_4=Unexpected end of input string\! Expected: start node.
EdgeListParser.Syntax_error_5=Unexpected end of input string\! Expected: end node.
NodeListParser.Syntax_error_1=Nodelist: syntax error in input string:
NodeListParser.Syntax_hint_1=Nodelist has to start with "{"\!
NodeListParser.Syntax_hint_2=Nodelist has to end with "}"\!
NodeListParser.Syntax_error_2=Unexpected end of input string\! Expected: node.
NodeListParser.Syntax_error_3=No valid node: 
NodeListParser.Syntax_hint_3=\! Only integers from 1 to 9 allowed.
NodeListParser.Syntax_hint_4=Separate nodes with ","\!
DijkstraAlgorithm.Node=Node 
DijkstraAlgorithm.Is_over=\ is over
DijkstraAlgorithm.Reachable_on_shorter_path=\ reachable on shorter path.
DijkstraAlgorithm.Reachable_over_existing_path_shorter=\ is reachable shorter over existing path.
DijkstraAlgorithm.New_node=New node in fringe: 
DijkstraAlgorithm.Error_1=Predecessor of border node is null
DijkstraAlgorithm.Error_2=Node equals predecessor
DijkstraAlgorithm.Choosed_as_start_node=\ choosed as start node.
DijkstraAlgorithm.Fringe_complete_for_start_node=Fringe complete for start node.
DijkstraAlgorithm.New_choosen=New chosen 
DijkstraAlgorithm.Fringe_complete=Fringe complete
DijkstraAlgorithm.Algorithm_finished=Algorithm finished
AlgorithmCalculationTableComposite.Chosen=Chosen
AlgorithmResultTableComposite.Target_node=Target node
AlgorithmResultTableComposite.Path_length=Path length
AlgorithmResultTableComposite.Shortest_path=Shortest Path
AlgorithmCalculationTableComposite.Fringe_node=Fringe node